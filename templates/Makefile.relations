# *************************************************************************************
# Makefile.relations
# Questa Makefile Environment
# 
# Copyright 2014 Mentor Graphics Corporation
# All Rights Reserved
#
# THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY OF
# MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS
#
# bugs, enhancment requests to: Mikael_Andersson@mentor.com
# *************************************************************************************
# This file contains all the calculated relations that we use.
# It will be read 

VSIM_GCC_VERSION=-cppinstall ${QUESTA_GCC_VERSION}
GUI_DO=-do "coverage save ${UCDBFILE} -testname ${TEST} -onexit;do ${VSIM_COMMON_DO} ${TEST} ${BLOCKNAME}; ${QUESTA_USER_DO}; ${QUESTA_SCRATCH_USER_DO}"
REGRESSION_DO=-do "do ${VSIM_COMMON_DO} ${TEST} ${BLOCKNAME}; ${QUESTA_USER_DO} run -a;coverage save ${UCDBFILE};exit -f"
REGRESSION_DBG_DO=-do "do ${VSIM_COMMON_DO} ${TEST} ${BLOCKNAME}; ${QUESTA_USER_DO};log /* -r; run -a;coverage save ${UCDBFILE};exit -f"
DESIGNLIB=${BLOCKNAME}_lib
VSIM_USER_DO=${QME_PROJECT_HOME}/${BLOCKNAME}/sim/vsim_user.do
###################################################################
# Select VOPT Switches depending on 
# CHIP=1
# or
# FAST=1
# or
# COVER=1
###################################################################
# CHIP & NOT FAST:
# Use VOPTSWITCHES_CHIP
# CHIP & FAST:
# Use VOPTSWITCHES_FAST_CHIP
###################################################################
ifeq ($(VERIFICATION_LEVEL),CHIP) 
VOPTSWITCHES=${VOPTSWITCHES_CHIP}
CC_OPT_ARGS=
CC_COLLECT=
ifeq ($(FAST),1)
VOPTSWITCHES=${VOPTSWITCHES_FAST_CHIP}
endif
ifeq ($(COVER),1)
CC_OPT_ARGS=${CODECOVERAGE}+${BLOCKNAME}. 
CC_COLLECT=-coverage
endif
endif

###################################################################
# BLOCK & NOT FAST:
# Use VOPTSWITCHES_BLOCK
# BLOCK & FAST:
# Use VOPTSWITCHES_FAST_BLOCK
###################################################################

ifeq ($(VERIFICATION_LEVEL),BLOCK) 
CC_OPT_ARGS=${CODECOVERAGE}+${BLOCKNAME}. 
CC_COLLECT=-coverage
VOPTSWITCHES=${VOPTSWITCHES_BLOCK}
ifeq ($(FAST),1)
VOPTSWITCHES=${VOPTSWITCHES_FAST_BLOCK}
endif
endif
VSIMVOPTARGS=-voptargs="${VOPTSWITCHES}"


# ADDING POSSIBILITY to set different debug levels
###################################################################
# DEBUG_LEVEL=LOW
###################################################################
# Visibility: As set by VOPT_ARGS
# class debug: No
# schematic debug:No 
# UVM debug: Limited
# Constraint debug;No
# Postsim dataflow debug:No
# Assertion debug: No
# FSM DEBUG: No
###################################################################
ifeq ($(DEBUG_LEVEL),LOW)
DEBUG=
POSTSIMDEBUG=
CLASSDEBUG=
SOLVEFAILDEBUG=0
ASSERTION_DBG=-assertcover
FSMDEBUG=
endif
###################################################################
# DEBUG_LEVEL=MEDIUM
###################################################################
# Visibility: As set by VOPT_ARGS
# class debug: yes
# schematic debug:No 
# UVM debug: yes
# Constraint debug;No
# Postsim dataflow debug:No
# Assertion debug: Yes
# FSM DEBUG: Yes
###################################################################
ifeq ($(DEBUG_LEVEL),MEDIUM)
DEBUG=
POSTSIMDEBUG=
CLASSDEBUG=-classdebug
SOLVEFAILDEBUG=0
ASSERTION_DBG=-assertdebug
FSMDEBUG=-fsmdebug
endif
###################################################################
# DEBUG_LEVEL=FULL
###################################################################
# Visibility: As set by VOPT_ARGS
# class debug: yes
# schematic debug:yes 
# UVM debug: yes
# Constraint debug;yes
# Postsim dataflow debug:Yes
# Assertion debug: Yes
# FSM DEBUG: Yes
###################################################################
ifeq ($(DEBUG_LEVEL),FULL)
DEBUG=-debugdb 
POSTSIMDEBUG=-postsimdataflow
CLASSDEBUG=-classdebug
SOLVEFAILDEBUG=1
ASSERTION_DBG=-assertdebug
FSMDEBUG=-fsmdebug
endif

###################################################################
# Turn on Visualizer (BETA)
###################################################################
ifeq ($(VISUALIZER),1)
VISUALIZER_ARGS=-qwavedb=+signal+transactions+systemc+report+class+assertion
VISUALIZER_OPTARGS=+designfile
endif










ifeq ($(SETUP),____DEFAULT_SETUP)
SETUPARGS=
else
SETUPARGS=-setup=+define+${SETUP}
endif

ifeq ($(AUTOSTART),0)
RUNNABLE=-gui
else
RUNNABLE=my_run
endif





# Regression timeouts
ifeq ($(NOTIMEOUT),1)
  TIMEOUTARGS=-notimeout
else
  TIMEOUTARGS=-mintimeout ${MAX_QUE_TIME}:${MAX_EXECUTION_TIME}  
endif

UVM_INC_DIR=+incdir+${UVM_HOME}/src
DPI_GCC_VERSION=-dpicppinstall ${QUESTA_GCC_VERSION}  


ifneq ($(EXTRA_VLOG_ARGS),)
X_VLOG_ARGS=-vlogargs=${EXTRA_VLOG_ARGS}
else
X_VLOG_ARGS=
endif

ifneq ($(EXTRA_VCOM_ARGS),)
X_VCOM_ARGS=-vcomargs=${EXTRA_VCOM_ARGS}
else
X_VCOM_ARGS=
endif

REGRESSION_ARGS=${TIMEOUTARGS} ${NOREUSESEEDS}

ifeq ($(RECOMPILE_UVM),1)
COMPILE_UVM_TARGET=compile_uvm
else
COMPILE_UVM_TARGET=no_uvm
endif

ifeq ($(UVMC),1) # UVMC=true
COMPILE_UVMC_TARGET=compile_uvmc
COMPILE_SC_TARGET=compile_sc
VSIM_TOP_LEVELS=$(TB_LIB_NAME).$(TB_TOP_NAME) $(TB_LIB_NAME).${SC_TOP_NAME}
VOPT_TOP_LEVELS=$(TB_TOP_NAME) ${SC_TOP_NAME}
ifeq ($(UVMC_HOME),)
$(error "Environment variable UVMC_HOME is not set")
endif




else
COMPILE_UVMC_TARGET=no_uvmc
COMPILE_SC_TARGET=no_comp_sc
VSIM_TOP_LEVELS=$(TB_LIB_NAME).$(TB_TOP_NAME) 
VOPT_TOP_LEVELS=$(TB_TOP_NAME) 
endif


# In order to prevent problems with automatic rerun...
ifeq ($(RERUN_FAILING_TESTS),1) # UVMC=true
NOREUSESEEDS=
endif

############ FORMAL STUFF ##################
ifneq (${FORMAL_DIRECTIVES},)
DO_FORMAL_DIRECTIVES=do ${FORMAL_DIRECTIVES}
else
DO_FORMAL_DIRECTIVES=
endif

ifneq (${FORMAL_INIT_FILE},)
DO_FORMAL_INIT=-init ${FORMAL_INIT_FILE}
else
DO_FORMAL_INIT=
endif

ifneq (${FORMAL_GENERICS_FILE},)
DO_FORMAL_GENERICS=-f ${FORMALGENERICS_FILE}
else
DO_FORMAL_GENERICS=
endif



#FORMAL_GENERICS= $(shell \
#        if [ -e $(FORMAL_GENERICS_FILE) ]; then \
#          cat ${FORMAL_GENERICS_FILE}; \
#        fi; \
#)
